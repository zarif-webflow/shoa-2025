{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../node_modules/.pnpm/@taj-wf+utils@1.1.1/node_modules/@taj-wf/utils/dist/index.js", "../src/logo-morph-animation.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener(\"change\", () => location.reload());\r\n", "var m=e=>{window.Webflow||=[],window.Webflow.push(e);};var c=({selector:e,parent:t,log:n=\"debug\"})=>{let o=(t||document).querySelector(e);return o===null?(n===false||(n===\"debug\"?console.debug:console.error)(`${n.toUpperCase()}: Element with selector \"${e}\" not found in ${t!==void 0?\"the specified parent element:\":\"the document.\"}`,t),null):o},d=({selector:e,parent:t,log:n=\"debug\"})=>{let o=Array.from((t||document).querySelectorAll(e));return o.length===0?(n===false||(n===\"debug\"?console.debug:console.error)(`${n.toUpperCase()}: No elements found with selector \"${e}\" in ${t!==void 0?\"the specified parent element:\":\"the document.\"}`,t),null):o};var u=()=>{let e=import.meta.url;return c({selector:`script[src=\"${e}\"]`})};var y=(e=[],t)=>{let n=null,o=t===\"debug\"?console.debug:t===\"error\"?console.error:null;try{n=gsap;}catch{o?.(\"GSAP script needs to be imported before this script:\",u(),`\n`,\"Get GSAP from here: https://gsap.com/docs/v3/Installation/ \");}let r=[n];for(let l=0;l<e.length;l++){let s=e[l],p=null;try{p=window[s]||null;}catch{o?.(`${s} plugin script needs to be imported before this script.`,u(),`\n`,`Get ${s} plugin from here: https://gsap.com/docs/v3/Installation/ `);}r[l+1]=p;}return r};var E=(e,t)=>{let n={};for(let o of Object.keys(t))n[o]=e.style[o],e.style[o]=t[o]||\"\";return {revert:()=>{Object.assign(e.style,n);}}};\nexport{m as afterWebflowReady,u as getActiveScript,y as getGsap,c as getHtmlElement,d as getMultipleHtmlElements,E as setStyle};", "import { afterWebflowReady, getGsap, getHtmlElement } from \"@taj-wf/utils\";\r\n\r\nconst SELECTORS = {\r\n  navLogo: \"[data-nav-logo]\",\r\n  heroLogo: \"[data-hero-logo]\",\r\n} as const;\r\n\r\nconst ATTRIBUTES = {\r\n  initialized: \"data-initialized\",\r\n  flipId: \"data-flip-id\",\r\n} as const;\r\n\r\nconst initLogoMorphAnimation = () => {\r\n  const [gsap, Flip] = getGsap([\"Flip\"], \"error\");\r\n\r\n  if (!gsap) {\r\n    console.error(\"GSAP is not available. Please ensure GSAP is loaded before this script.\");\r\n    return;\r\n  }\r\n\r\n  if (!Flip) {\r\n    console.error(\r\n      \"GSAP Flip plugin is not available. Please ensure it is loaded before this script.\"\r\n    );\r\n    return;\r\n  }\r\n\r\n  const navLogo = getHtmlElement({ selector: SELECTORS.navLogo, log: \"error\" });\r\n  const heroLogo = getHtmlElement({ selector: SELECTORS.heroLogo, log: \"error\" });\r\n\r\n  if (!navLogo || !heroLogo) return;\r\n\r\n  const navFlipId = navLogo.getAttribute(ATTRIBUTES.flipId)?.trim();\r\n  const heroFlipId = heroLogo.getAttribute(ATTRIBUTES.flipId)?.trim();\r\n\r\n  if (!navFlipId || !heroFlipId || navFlipId !== heroFlipId) {\r\n    console.error(\r\n      `Nav and hero logos must have the same flip ID with ${ATTRIBUTES.flipId} for morphing to work.`,\r\n      \"\\n\",\r\n      \"\\n\",\r\n      \"Hero Logo:\",\r\n      heroLogo,\r\n      \"\\n\",\r\n      \"Nav Logo:\",\r\n      navLogo\r\n    );\r\n    return;\r\n  }\r\n\r\n  gsap.registerPlugin(Flip);\r\n\r\n  let currentState: \"hero\" | \"nav\" = \"hero\";\r\n\r\n  const tempTrigger = document.querySelector(\".hero-right\");\r\n\r\n  const morphHeroLogoToNavLogo = () => {\r\n    const flipState = Flip.getState([navLogo, heroLogo]);\r\n\r\n    heroLogo.style.display = \"none\";\r\n    navLogo.style.removeProperty(\"display\");\r\n\r\n    Flip.from(flipState, {\r\n      duration: 1,\r\n      ease: \"power3.inOut\",\r\n      absolute: true,\r\n    });\r\n\r\n    currentState = \"nav\";\r\n  };\r\n\r\n  const morphNavLogoToHeroLogo = () => {\r\n    const flipState = Flip.getState([navLogo, heroLogo]);\r\n\r\n    navLogo.style.display = \"none\";\r\n    heroLogo.style.removeProperty(\"display\");\r\n\r\n    Flip.from(flipState, {\r\n      duration: 1.5,\r\n      ease: \"power3.inOut\",\r\n      absolute: true,\r\n    });\r\n\r\n    currentState = \"hero\";\r\n  };\r\n\r\n  tempTrigger?.addEventListener(\"click\", () => {\r\n    if (currentState === \"hero\") {\r\n      morphHeroLogoToNavLogo();\r\n      return;\r\n    }\r\n    morphNavLogoToHeroLogo();\r\n  });\r\n\r\n  navLogo.setAttribute(ATTRIBUTES.initialized, \"true\");\r\n  heroLogo.setAttribute(ATTRIBUTES.initialized, \"true\");\r\n\r\n  morphNavLogoToHeroLogo();\r\n};\r\n\r\nafterWebflowReady(() => {\r\n  initLogoMorphAnimation();\r\n});\r\n"],
  "mappings": "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",
  "names": ["gsap"]
}
